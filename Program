
import org.apache.poi.ss.usermodel.*;
import org.json.JSONObject;
import org.json.XML;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Iterator;

public class JsonToXmlConverter {

    public static void main(String[] args) {
        try {
            // Specify the input and output directories
            String inputDir = "Input";
            String outputDir = "Output";

            // Load the mapping sheet from the Excel file
            File mappingFile = new File(inputDir + File.separator + "mapping.xlsx");
            Workbook workbook = WorkbookFactory.create(mappingFile);
            Sheet sheet = workbook.getSheetAt(0);

            // Read the JSON input
            String jsonData = new String(Files.readAllBytes(Paths.get(inputDir + File.separator + "input.json")));
            JSONObject jsonObject = new JSONObject(jsonData);

            // Create the XML document
            DocumentBuilderFactory documentBuilderFactory = DocumentBuilderFactory.newInstance();
            DocumentBuilder documentBuilder = documentBuilderFactory.newDocumentBuilder();
            org.w3c.dom.Document xmlDocument = documentBuilder.newDocument();

            // Process each row in the mapping sheet
            Iterator<Row> rowIterator = sheet.iterator();
            while (rowIterator.hasNext()) {
                Row row = rowIterator.next();
                Cell xmlPathCell = row.getCell(0);
                Cell jsonPathCell = row.getCell(5);

                String xmlPath = xmlPathCell.getStringCellValue();
                String jsonPath = jsonPathCell.getStringCellValue();

                // Get the value from the JSON based on the JSON path
                Object value = jsonObject.query(jsonPath);

                // Set the value in the XML document
                XML.setValueByPath(xmlDocument, xmlPath, value);
            }

            // Write the XML document to the output file
            File outputFile = new File(outputDir + File.separator + "output.xml");
            writeXmlToFile(xmlDocument, outputFile);

            System.out.println("JSON to XML conversion completed successfully.");
        } catch (Exception e) {
            System.out.println("Error occurred during JSON to XML conversion: " + e.getMessage());
        }
    }

    private static void writeXmlToFile(org.w3c.dom.Document xmlDocument, File outputFile) throws Exception {
        TransformerFactory transformerFactory = TransformerFactory.newInstance();
        Transformer transformer = transformerFactory.newTransformer();
        DOMSource source = new DOMSource(xmlDocument);
        StreamResult result = new StreamResult(outputFile);
        transformer.transform(source, result);
    }
}
