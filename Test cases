// Test Case 1: Empty JSON schema
String jsonSchema1 = "{}";
String jsonSample1 = "{}";

// Test Case 2: JSON schema with array type property
String jsonSchema2 = "{\"type\": \"array\", \"items\": {\"type\": \"string\"}}";
String jsonSample2 = "[\"item1\", \"item2\", \"item3\"]";

// Test Case 3: JSON schema with complex nested objects
String jsonSchema3 = "{" +
        "\"type\": \"object\"," +
        "\"properties\": {" +
        "   \"name\": {\"type\": \"string\"}," +
        "   \"address\": {" +
        "       \"type\": \"object\"," +
        "       \"properties\": {" +
        "           \"street\": {\"type\": \"string\"}," +
        "           \"city\": {\"type\": \"string\"}," +
        "           \"country\": {\"type\": \"string\"}" +
        "       }," +
        "       \"required\": [\"street\", \"city\", \"country\"]" +
        "   }" +
        "}," +
        "\"required\": [\"name\", \"address\"]" +
        "}";
String jsonSample3 = "{" +
        "\"name\": \"John Doe\"," +
        "\"address\": {" +
        "   \"street\": \"123 Main St\"," +
        "   \"city\": \"Anytown\"," +
        "   \"country\": \"USA\"" +
        "}" +
        "}";

// Test Case 4: JSON schema with additional properties allowed
String jsonSchema4 = "{" +
        "\"type\": \"object\"," +
        "\"properties\": {" +
        "   \"name\": {\"type\": \"string\"}" +
        "}," +
        "\"additionalProperties\": true" +
        "}";
String jsonSample4 = "{" +
        "\"name\": \"John Doe\"," +
        "\"age\": 25," +
        "\"email\": \"johndoe@example.com\"" +
        "}";

// Test Case 5: JSON schema with integer property
String jsonSchema5 = "{\"type\": \"integer\"}";
String jsonSample5 = "42";

// Test Case 6: JSON schema with required property missing in the sample
String jsonSchema6 = "{" +
        "\"type\": \"object\"," +
        "\"properties\": {" +
        "   \"name\": {\"type\": \"string\"}," +
        "   \"age\": {\"type\": \"integer\"}" +
        "}," +
        "\"required\": [\"name\", \"age\"]" +
        "}";
String jsonSample6 = "{" +
        "\"name\": \"John Doe\"" +
        "}";

// Test Case 7: JSON schema with incompatible data type in the sample
String jsonSchema7 = "{\"type\": \"string\"}";
String jsonSample7 = "42";  // Incompatible data type for string schema

// Test Case 8: JSON schema with invalid format constraint
String jsonSchema8 = "{\"type\": \"string\", \"format\": \"email\"}";
String jsonSample8 = "notanemail";  // Invalid email format

// Test Case 9: JSON schema with nested arrays
String jsonSchema9 = "{\"type\": \"array\", \"items\": {\"type\": \"array\", \"items\": {\"type\": \"integer\"}}}";
String jsonSample9 = "[[1, 2, 3], [4, 5, 6], [7, 8, 9]]";

// Test Case 10: JSON schema with maximum and minimum value constraints
String jsonSchema10 = "{\"type\": \"number\", \"minimum\": 1, \"maximum\": 10}";
String jsonSample10 = "5.5";
